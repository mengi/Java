<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                            http://www.springframework.org/schema/jdbc 
                            http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
                            http://www.springframework.org/schema/security 
                            http://www.springframework.org/schema/security/spring-security-4.0.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/tx 
                            http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                            http://www.springframework.org/schema/mvc 
                            http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">                         

	<context:component-scan base-package="controllers" />
	<context:component-scan base-package="entities" />
	<context:component-scan base-package="service" />
	<context:component-scan base-package="facade" />
	<context:component-scan base-package="validator" />
	<context:component-scan base-package="security" />
	
	<bean id="autowireHelper" class="helper.AutowireHelper" factory-method="getInstance"/>
	
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/jspPagesFolder/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	
	<mvc:resources mapping="/resources/**" location="/resources/theme1/"  
	cache-period="31556926"/>

    <mvc:annotation-driven />
	
	<tx:annotation-driven />
    <bean class="org.springframework.orm.jpa.JpaTransactionManager" 
        id="transactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!--  This defines the entity manager factory with some custom properties -->
  <bean id='entityManagerFactory' 
      class='org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean'>
    <property name="persistenceUnitName" value="SpringMVCBlogProject"/>
    <property name='dataSource' ref='dataSource' />
    <property name="jpaPropertyMap">
        <map>
          <entry key="eclipselink.weaving" value="false"/>
        </map>
    </property>
  </bean>

  <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/SpringMVCBlogProject?useUnicode=yes&amp;characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value=""/>
    </bean>
    
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	    <property name="basename" value="/WEB-INF/localization/messages" />
	    <property name="defaultEncoding" value="UTF-8" />
 	</bean>
 	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver">
     	<property name="defaultLocale" value="en_US" />
 	</bean>
 
	 <mvc:interceptors>
	     <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
	     <property name="paramName" value="language" />
	     </bean>
	 </mvc:interceptors>
	 
	 <security:http auto-config="true" use-expressions="true">
        <security:csrf disabled="true"></security:csrf>
        <security:intercept-url pattern="/index.html" access="permitAll" />
        <security:intercept-url pattern="/articleAdd.html" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <security:intercept-url pattern="/articleList.html" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <security:intercept-url pattern="/memberList.html" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <security:intercept-url pattern="/postArticle.html" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <security:intercept-url pattern="/articleView.html" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
        <security:intercept-url pattern="/webservice/**" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')"/>
        
        <!-- Spring Security 4 ile birlikte username ve passwordü parametre olarak geçirmek gerekiyor. -->
        <security:form-login username-parameter="j_username" password-parameter="j_password" login-processing-url="/j_spring_security_check" login-page="/login.html"
                             default-target-url="/memberList.html" authentication-failure-url="/login.html"/>
        <security:logout logout-url="/j_spring_security_logout" invalidate-session="true" logout-success-url="/login.html" />
        <security:remember-me data-source-ref="dataSource" token-validity-seconds="86400" />

    </security:http>
	 
	 <security:authentication-manager>
	 	<security:authentication-provider>
	 		<security:password-encoder hash="md5"/>
	 			<security:jdbc-user-service data-source-ref="dataSource"
	 										users-by-username-query="select emailAddress,password,enabled from members where emailAddress=?"
                                        	authorities-by-username-query="select u.emailAddress, r.role from members u, userroles r
                                        	where u.emailAddress = r.emailAddress and u.emailAddress =?"/> 
	 	</security:authentication-provider>
	 </security:authentication-manager>
</beans>